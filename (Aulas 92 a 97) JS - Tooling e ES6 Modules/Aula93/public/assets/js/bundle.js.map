{"version":3,"file":"bundle.js","mappings":";;;;;AAAA,SAASA,IAAIA,CAACC,GAAG,EAAEC,GAAG,EAAC;EACpBD,GAAG,IAAI,IAAI;EACZC,GAAG,IAAI,IAAI;EACX,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAGH,GAAG,GAACD,GAAG,CAAC,GAACA,GAAG,CAAC;AACjD;AACA,SAASK,MAAMA,CAACC,GAAG,EAACC,KAAK,EAAC;EACxB,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAACC,MAAM,EAAG;IACjC,IAAI,OAAOJ,GAAG,KAAI,QAAQ,EAAC;MAC1BI,MAAM,CAAC,IAAIC,SAAS,CAAC,MAAM,CAAC,CAAC;MAC7B;IACD;IACAC,UAAU,CAAC,YAAI;MACfH,OAAO,CAACH,GAAG,CAAC;IACZ,CAAC,EAACC,KAAK,CAAC;EACZ,CAAC,CAAC;AACJ;AAEA,IAAMM,QAAQ,GAAG,CACf,UAAU,EACVR,MAAM,CAAC,WAAW,EAACN,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAC7BM,MAAM,CAAC,WAAW,EAAEN,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAC9BM,MAAM,CAAC,WAAW,EAAEN,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAC9BM,MAAM,CAAC,EAAE,EAAC,IAAI,CAAC,EACf,QAAQ,CACT;AAIDG,OAAO,CAACM,IAAI,CAACD,QAAQ,CAAC,CAACE,IAAI,CAAC,UAASC,KAAK,EAAC;EACzCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;AACpB,CAAC,CAAC,SACI,CAAC,UAASG,IAAI,EAAC;EACnBF,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;AACnB,CAAC,CAAC;AAEF,SAASC,YAAYA,CAAA,EAAG;EACtB,IAAMC,OAAO,GAAG,KAAK;EAGrB,IAAGA,OAAO,EAAC;IACP,OAAOb,OAAO,CAACE,MAAM,eAAc,gBAAgB,CAAC;EACxD,CAAC,MAAI;IACD,OAAOL,MAAM,CAAC,iBAAiB,EAAC,IAAI,CAAC;EACzC;AACF;AACAe,YAAY,CAAC,CAAC,CAACL,IAAI,CAAC,UAAAO,OAAO,EAAG;EAC5BL,OAAO,CAACC,GAAG,CAACI,OAAO,CAAC;AACtB,CAAC,CAAC,SAAM,CAAC,UAAAC,CAAC;EAAA,OAAIN,OAAO,CAACC,GAAG,CAAC,MAAM,EAACK,CAAC,CAAC;AAAA,EAAC,C","sources":["webpack://aula93/./src/index.js"],"sourcesContent":["function rand(min, max){\r\n   min *= 1000\r\n  max *= 1000\r\n  return Math.floor(Math.random()* (max-min)+min);\r\n}\r\nfunction espera(msg,tempo){\r\n  return new Promise((resolve,reject)=>{\r\n      if (typeof msg !=='string'){\r\n       reject(new TypeError('erro'));\r\n       return\r\n      }\r\n      setTimeout(()=>{\r\n      resolve(msg)\r\n      },tempo);\r\n  });\r\n}\r\n\r\nconst promises = [\r\n  'primeiro',\r\n  espera('promise 1',rand(1,3)),\r\n  espera('promise 2', rand(1,3)),\r\n  espera('promise 3', rand(1,3)),\r\n  espera(10,1000),\r\n  'ultimo'    \r\n];\r\n\r\n\r\n\r\nPromise.race(promises).then(function(valor){\r\n  console.log(valor)\r\n})\r\n.catch(function(erro){\r\n  console.log(erro);\r\n})\r\n\r\nfunction baixarPagina() {\r\n  const emCache = false\r\n  \r\n  \r\n  if(emCache){\r\n      return Promise.reject/* .resolve*/('Monstra pagina')\r\n  }else{\r\n      return espera('Baixei a pagina',3000)\r\n  }\r\n}\r\nbaixarPagina().then(dadosPg =>{\r\n  console.log(dadosPg)\r\n}).catch(e => console.log('ERRO',e))"],"names":["rand","min","max","Math","floor","random","espera","msg","tempo","Promise","resolve","reject","TypeError","setTimeout","promises","race","then","valor","console","log","erro","baixarPagina","emCache","dadosPg","e"],"sourceRoot":""}